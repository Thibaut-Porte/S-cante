import math as m

def secante(f, x0, x1, epsilon):
    n=0
    while abs(x0-x1) > epsilon:
        x2 = (x0 * f(x1) - x1 * f(x0)) / (f(x1) - f(x0))
        x0,  x1  = x1,  x2
        n+=1
    return x1 ,n


def f1(x):
    return x**4+3*x-9
print("1:", secante(f1, 1.5, 2, 10**(-10)))
print("1:", secante(f1, -1.5, -2, 10**(-10)))

def f2(x):
    return x-3*m.cos(x)+2
print("2:",secante(f2, 0.5, 2, 10**(-10)))
print("2:",secante(f2, -0.5, -1, 10**(-10)))
print("2:",secante(f2, -4, -3, 10**(-10)))

def f3(x):
    return x*m.exp(x)-7
print("3:",secante(f3, 1.5, 2, 10**(-10)))

def f4(x):
    return m.exp(x) -x -10
print("4:",secante(f4, 3, 4, 10**(-10)))
print("4:",secante(f4, -10, -9, 10**(-10)))

def f5(x):
    return x+5-2*m.tan(x)
print("5:",secante(f5, 1, 1.5, 10**(-10)))
# On a change le 2 en 1.5 car sinon ca ne fait pas le meme chiffre qu'avec la Dichotomie. 

def f6(x):
    return m.exp(x)- x**2 - 3
print("6:",secante(f6, 1.9, 2, 10**(-10)))

def f7(x):
    return 3*x+4*m.log(x)-7
print("7:",secante(f7, 1.9, 2, 10**(-10)))

def f8(x):
    return x**4 - 2*x**2 +4*x-17
print("8:",secante(f8, 2.5, 3, 10**(-10)))
print("8:",secante(f8, -2.5, -2, 10**(-10)))

def f9(x):
    return m.exp(x)- 2*m.sin(x)- 7
print("9:",secante(f9, 2, 3, 10**(-10)))

def f10(x):
    return (m.log(x**2 + 4))*(m.exp(x))- 10
print("10:",secante(f10, 1.5, 2, 10**(-10)))


